// <auto-generated />
using AgeStructureDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgeStructureDb.Migrations
{
    [DbContext(typeof(AgeStructureDbContext))]
    [Migration("20231024004714_PopulationByAgeGroup")]
    partial class PopulationByAgeGroup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgeStructureDb.DimAge", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("DimAges");
                });

            modelBuilder.Entity("AgeStructureDb.DimRegion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimRegions");
                });

            modelBuilder.Entity("AgeStructureDb.DimRegionType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("GeographyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimRegionTypes");
                });

            modelBuilder.Entity("AgeStructureDb.DimSex", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimSexes");
                });

            modelBuilder.Entity("AgeStructureDb.DimState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimStates");
                });

            modelBuilder.Entity("AgeStructureDb.DimYear", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CensusYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DimYears");
                });

            modelBuilder.Entity("AgeStructureDb.FactPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RegionTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeId");

                    b.HasIndex("RegionId");

                    b.HasIndex("RegionTypeId");

                    b.HasIndex("SexId");

                    b.HasIndex("StateId");

                    b.HasIndex("YearId");

                    b.ToTable("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.FactPopulation", b =>
                {
                    b.HasOne("AgeStructureDb.DimAge", "Age")
                        .WithMany("FactPopulations")
                        .HasForeignKey("AgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgeStructureDb.DimRegion", "Region")
                        .WithMany("FactPopulations")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgeStructureDb.DimRegionType", "RegionType")
                        .WithMany("FactPopulations")
                        .HasForeignKey("RegionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgeStructureDb.DimSex", "Sex")
                        .WithMany("FactPopulations")
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgeStructureDb.DimState", "State")
                        .WithMany("FactPopulations")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgeStructureDb.DimYear", "Year")
                        .WithMany("FactPopulations")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Age");

                    b.Navigation("Region");

                    b.Navigation("RegionType");

                    b.Navigation("Sex");

                    b.Navigation("State");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("AgeStructureDb.DimAge", b =>
                {
                    b.Navigation("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.DimRegion", b =>
                {
                    b.Navigation("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.DimRegionType", b =>
                {
                    b.Navigation("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.DimSex", b =>
                {
                    b.Navigation("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.DimState", b =>
                {
                    b.Navigation("FactPopulations");
                });

            modelBuilder.Entity("AgeStructureDb.DimYear", b =>
                {
                    b.Navigation("FactPopulations");
                });
#pragma warning restore 612, 618
        }
    }
}
